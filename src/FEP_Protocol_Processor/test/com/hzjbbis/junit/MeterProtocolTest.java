package com.hzjbbis.junit;

import com.hzjbbis.fas.protocol.meter.BbMeterFrame;
import com.hzjbbis.fas.protocol.meter.BbMeterParser;
import com.hzjbbis.fas.protocol.meter.SmMeterFrame;
import com.hzjbbis.fas.protocol.meter.SmMeterParser;
import com.hzjbbis.fas.protocol.meter.ZjMeterFrame;
import com.hzjbbis.fas.protocol.meter.ZjMeterParser;
import com.hzjbbis.fas.protocol.zj.parse.ParseTool;
import com.hzjbbis.fas.startup.ClassLoaderUtil;

import junit.framework.TestCase;

public class MeterProtocolTest extends TestCase {
	public void setUp(){
		ClassLoaderUtil.initializeClassPath();
	}
	
	public void tearDown(){
		System.out.println("good bye");
	}
	public void testZjMeterFrame(){
		/*byte[] data=new byte[]{0x68,0x1C,0x1C,0x68 
				,0x25 
				,0x10,0x04 
				,0x00,0x00,0x00 
				,0x00,0x00,0x00 
				,0x00,0x00,0x00 
				,0x00,0x00,0x00 
				,0x05,0x00
				,0x13,0x00 
				,(byte)0x88,0x22 
				,0x00,0x00 
				,0x00,0x00 
				,0x00,0x00 
				,(byte)0xED 
				,(byte)0xE8,0x0D};*/
		ZjMeterParser parser=new ZjMeterParser();
		String[] datakeys=new String[]{"B611","B612","B613","B621","B622","B623"};
		String[] zjkeys=parser.convertDataKey(datakeys);
		//ZjMeterFrame frame=new ZjMeterFrame();
		//frame.parse(data,0,data.length);
		//byte[] result=frame.getData();
		//Object[] datas=parser.parser(data,0,data.length );
		TestCase.assertNotNull(zjkeys);
	}
	
	public void testBbMeterFrame(){
		/*byte[] data=new byte[]{0x68,0x01,00,0x00,0x00,0x00,0x00,0x68
				,(byte)0x81,0x06,0x43,(byte)0xC3,(byte)0x8A,(byte)0xB7
				,0x4B,0x33,0x1D,0x16};*/
		byte[] data=new byte[]{0x68,0x07,0x28,0x04,0x00,0x00,0x00,0x68
				,(byte)0x81,0x17,0x52,(byte)0xC3,0x3A,0x55,0x7C,0x33,(byte)0x9A
				,0x64,0x34,0x33,0x69,(byte)0x99,0x65,0x33,0x33,0x33,0x33,0x33
				,0x37,0x57,0x48,0x33,(byte)0xDD,(byte)0x9F,0x16};
		BbMeterParser parser=new BbMeterParser();
		BbMeterFrame frame=new BbMeterFrame();
		parser.convertDataKey(new String[]{"B611","B612","B613","B621","B622","B623"});
		frame.parse(data,0,data.length);
		//byte[] result=frame.getData();
		Object[] datas=parser.parser(data,0,data.length );
		TestCase.assertNotNull(datas);
	}
	
	public void testSMMeterFrame(){
		/*byte[] data=new byte[]{0x68,0x01,00,0x00,0x00,0x00,0x00,0x68
				,(byte)0x81,0x06,0x43,(byte)0xC3,(byte)0x8A,(byte)0xB7
				,0x4B,0x33,0x1D,0x16};*/
		String hex
		byte[] data=new byte[hex.length()/2];
		ParseTool.HexsToBytesCB(data, 0, hex);
		SmMeterParser parser=new SmMeterParser();
		SmMeterFrame frame=new SmMeterFrame();
		frame.parse(data,0,data.length);
		//byte[] result=frame.getData();
		Object[] datas=parser.parser(data,0,data.length );
		TestCase.assertNotNull(datas);
	}
}
